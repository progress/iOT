import {
    TemplateRef,
    ElementRef,
    EmbeddedViewRef
} from "@angular/core";

/**
* Represents the RadCartesianChartDirective component. Represents a Cartesian Chart 
* that uses the cartesian coordinate system to plot the data point values. 
* The component exposes all major features supported by the native controls 
* through a unified API suitable for NativeScript developers.
*/
export class RadCartesianChartDirective { }

/**
* Represents the RadPieChartDirective directive. Represents a chart that 
* visualizes its values as a slices of a pie. Depending on the
* associated series the values are visualized as a standard pie or a doughnut. 
* The component exposes all major features supported by the native controls 
* through a unified API suitable for NativeScript developers.
*/
export class RadPieChartDirective { }

/**
 * Directive identifying the RadLegendViewDirective.
 */
export class RadLegendViewDirective { }

/**
 * Directive identifying the categoricalAxis of the RadCartesianChart component.
 */
export class CategoricalAxisDirective { }

/**
 * Directive identifying the LinearAxis.
 */
export class LinearAxisDirective { }

/**
 * Directive identifying the DateTimeCategoricalAxis.
 */
export class DateTimeCategoricalAxisDirective { }

/**
 * Directive identifying the LineSeries.
 */
export class LineSeriesDirective { }

/**
 * Directive identifying the AreaSeries.
 */
export class AreaSeriesDirective { }

/**
 * Directive identifying the SplineSeries.
 */
export class SplineSeriesDirective { }

/**
 * Directive identifying the BarSeries.
 */
export class BarSeriesDirective { }

/**
 * Directive identifying the RangeBarSeries.
 */
export class RangeBarSeriesDirective { }

/**
 * Directive identifying the BubbleSeries.
 */
export class BubbleSeriesDirective { }

/**
 * Directive identifying the ScatterBubbleSeries.
 */
export class ScatterBubbleSeriesDirective { }

/**
 * Directive identifying the ScatterSeries.
 */
export class ScatterSeriesDirective { }

/**
 * Directive identifying the Palette.
 */
export class PaletteDirective { }

/**
 * Directive identifying the PieSeries.
 */
export class PieSeriesDirective { }

/**
 * Directive identifying the DonutSeries.
 */
export class DonutSeriesDirective { }

/**
 * Directive identifying the CandlestickSeries.
 */
export class CandlestickSeriesDirective { }

/**
 * Directive identifying the OhlcSeries.
 */
export class OhlcSeriesDirective { }

/**
 * Directive identifying the RadCartesianChartGrid.
 */
export class RadCartesianChartGridDirective { }

/**
 * Directive identifying the grid of the RadCartesianChart component.
 */
export class CartesianChartGridDirective { }

/**
 * Directive identifying the series of the RadCartesianChart component.
 */
export class CartesianSeriesDirective { }

/**
 * Directive identifying the series of the RadPieChart component.
 */
export class PieChartSeriesDirective { }

/**
 * Directive identifying the palette objects of the RadPieChart component.
 */
export class CartesianPaletteDirective { }

/**
 * Directive identifying the horizontalAxis of the RadCartesianChart component.
 */
export class CartesianHorizontalAxisDirective { }

/**
 * Directive identifying the verticalAxis of the RadCartesianChart component.
 */
export class CartesianVerticalAxisDirective { }

/**
 * Directive identifying the legend of the of the RadPieChart component.
 */
export class PieLegendDirective { }

/**
 * Directives identifying the RadChart.
 */
export const CHART_DIRECTIVES;

/**
 * Providers used by the identifying RadCartesianChartComponent.
 */
export const CHART_PROVIDERS;