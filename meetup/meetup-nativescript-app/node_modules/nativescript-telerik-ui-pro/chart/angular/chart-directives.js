var core_1 = require('@angular/core');
var elementRegistryModule = require('nativescript-angular/element-registry');
var chartModule = require('./../');
var di_1 = require('@angular/core/src/di');
var observable_array_1 = require("data/observable-array");
var ChartComponentBase = (function () {
    function ChartComponentBase() {
    }
    Object.defineProperty(ChartComponentBase.prototype, "nativeChart", {
        get: function () {
            return this._nativeChart;
        },
        enumerable: true,
        configurable: true
    });
    return ChartComponentBase;
}());
var RadCartesianChartDirective = (function (_super) {
    __extends(RadCartesianChartDirective, _super);
    function RadCartesianChartDirective(_elementRef) {
        _super.call(this);
        this._elementRef = _elementRef;
        this._nativeChart = _elementRef.nativeElement;
        var component = this;
    }
    RadCartesianChartDirective = __decorate([
        core_1.Directive({
            selector: "RadCartesianChart",
        }),
        __param(0, core_1.Inject(core_1.ElementRef))
    ], RadCartesianChartDirective);
    return RadCartesianChartDirective;
}(ChartComponentBase));
exports.RadCartesianChartDirective = RadCartesianChartDirective;
var RadPieChartDirective = (function (_super) {
    __extends(RadPieChartDirective, _super);
    function RadPieChartDirective(_elementRef) {
        _super.call(this);
        this._elementRef = _elementRef;
        this._nativeChart = _elementRef.nativeElement;
        var component = this;
    }
    Object.defineProperty(RadPieChartDirective.prototype, "nativePieChart", {
        get: function () {
            return this._nativePieChart;
        },
        enumerable: true,
        configurable: true
    });
    RadPieChartDirective = __decorate([
        core_1.Directive({
            selector: "RadPieChart"
        }),
        __param(0, core_1.Inject(core_1.ElementRef))
    ], RadPieChartDirective);
    return RadPieChartDirective;
}(ChartComponentBase));
exports.RadPieChartDirective = RadPieChartDirective;
var RadLegendViewDirective = (function () {
    function RadLegendViewDirective() {
    }
    RadLegendViewDirective = __decorate([
        core_1.Directive({
            selector: "RadLegendView"
        })
    ], RadLegendViewDirective);
    return RadLegendViewDirective;
}());
exports.RadLegendViewDirective = RadLegendViewDirective;
var CategoricalAxisDirective = (function () {
    function CategoricalAxisDirective() {
    }
    CategoricalAxisDirective = __decorate([
        core_1.Directive({
            selector: "CategoricalAxis"
        })
    ], CategoricalAxisDirective);
    return CategoricalAxisDirective;
}());
exports.CategoricalAxisDirective = CategoricalAxisDirective;
var LinearAxisDirective = (function () {
    function LinearAxisDirective() {
    }
    LinearAxisDirective = __decorate([
        core_1.Directive({
            selector: "LinearAxis"
        })
    ], LinearAxisDirective);
    return LinearAxisDirective;
}());
exports.LinearAxisDirective = LinearAxisDirective;
var DateTimeCategoricalAxisDirective = (function () {
    function DateTimeCategoricalAxisDirective() {
    }
    DateTimeCategoricalAxisDirective = __decorate([
        core_1.Directive({
            selector: "DateTimeCategoricalAxis"
        })
    ], DateTimeCategoricalAxisDirective);
    return DateTimeCategoricalAxisDirective;
}());
exports.DateTimeCategoricalAxisDirective = DateTimeCategoricalAxisDirective;
var LineSeriesDirective = (function () {
    function LineSeriesDirective() {
    }
    LineSeriesDirective = __decorate([
        core_1.Component({
            selector: "LineSeries",
            template: ""
        })
    ], LineSeriesDirective);
    return LineSeriesDirective;
}());
exports.LineSeriesDirective = LineSeriesDirective;
var AreaSeriesDirective = (function () {
    function AreaSeriesDirective() {
    }
    AreaSeriesDirective = __decorate([
        core_1.Directive({
            selector: "AreaSeries"
        })
    ], AreaSeriesDirective);
    return AreaSeriesDirective;
}());
exports.AreaSeriesDirective = AreaSeriesDirective;
var SplineSeriesDirective = (function () {
    function SplineSeriesDirective() {
    }
    SplineSeriesDirective = __decorate([
        core_1.Directive({
            selector: "SplineSeries"
        })
    ], SplineSeriesDirective);
    return SplineSeriesDirective;
}());
exports.SplineSeriesDirective = SplineSeriesDirective;
var BarSeriesDirective = (function () {
    function BarSeriesDirective() {
    }
    BarSeriesDirective = __decorate([
        core_1.Directive({
            selector: "BarSeries"
        })
    ], BarSeriesDirective);
    return BarSeriesDirective;
}());
exports.BarSeriesDirective = BarSeriesDirective;
var RangeBarSeriesDirective = (function () {
    function RangeBarSeriesDirective() {
    }
    RangeBarSeriesDirective = __decorate([
        core_1.Directive({
            selector: "RangeBarSeries"
        })
    ], RangeBarSeriesDirective);
    return RangeBarSeriesDirective;
}());
exports.RangeBarSeriesDirective = RangeBarSeriesDirective;
var BubbleSeriesDirective = (function () {
    function BubbleSeriesDirective() {
    }
    BubbleSeriesDirective = __decorate([
        core_1.Directive({
            selector: "BubbleSeries"
        })
    ], BubbleSeriesDirective);
    return BubbleSeriesDirective;
}());
exports.BubbleSeriesDirective = BubbleSeriesDirective;
var ScatterBubbleSeriesDirective = (function () {
    function ScatterBubbleSeriesDirective() {
    }
    ScatterBubbleSeriesDirective = __decorate([
        core_1.Directive({
            selector: "ScatterBubbleSeries"
        })
    ], ScatterBubbleSeriesDirective);
    return ScatterBubbleSeriesDirective;
}());
exports.ScatterBubbleSeriesDirective = ScatterBubbleSeriesDirective;
var ScatterSeriesDirective = (function () {
    function ScatterSeriesDirective() {
    }
    ScatterSeriesDirective = __decorate([
        core_1.Directive({
            selector: "ScatterSeries"
        })
    ], ScatterSeriesDirective);
    return ScatterSeriesDirective;
}());
exports.ScatterSeriesDirective = ScatterSeriesDirective;
var PaletteDirective = (function () {
    function PaletteDirective() {
    }
    PaletteDirective = __decorate([
        core_1.Directive({
            selector: "Palette"
        })
    ], PaletteDirective);
    return PaletteDirective;
}());
exports.PaletteDirective = PaletteDirective;
var PieSeriesDirective = (function () {
    function PieSeriesDirective() {
    }
    PieSeriesDirective = __decorate([
        core_1.Directive({
            selector: "PieSeries"
        })
    ], PieSeriesDirective);
    return PieSeriesDirective;
}());
exports.PieSeriesDirective = PieSeriesDirective;
var DonutSeriesDirective = (function () {
    function DonutSeriesDirective() {
    }
    DonutSeriesDirective = __decorate([
        core_1.Directive({
            selector: "DonutSeries"
        })
    ], DonutSeriesDirective);
    return DonutSeriesDirective;
}());
exports.DonutSeriesDirective = DonutSeriesDirective;
var CandlestickSeriesDirective = (function () {
    function CandlestickSeriesDirective() {
    }
    CandlestickSeriesDirective = __decorate([
        core_1.Directive({
            selector: "CandlestickSeries"
        })
    ], CandlestickSeriesDirective);
    return CandlestickSeriesDirective;
}());
exports.CandlestickSeriesDirective = CandlestickSeriesDirective;
var OhlcSeriesDirective = (function () {
    function OhlcSeriesDirective() {
    }
    OhlcSeriesDirective = __decorate([
        core_1.Directive({
            selector: "OhlcSeries"
        })
    ], OhlcSeriesDirective);
    return OhlcSeriesDirective;
}());
exports.OhlcSeriesDirective = OhlcSeriesDirective;
var RadCartesianChartGridDirective = (function () {
    function RadCartesianChartGridDirective() {
    }
    RadCartesianChartGridDirective = __decorate([
        core_1.Directive({
            selector: "RadCartesianChartGrid"
        })
    ], RadCartesianChartGridDirective);
    return RadCartesianChartGridDirective;
}());
exports.RadCartesianChartGridDirective = RadCartesianChartGridDirective;
var CartesianChartGridDirective = (function () {
    function CartesianChartGridDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    CartesianChartGridDirective.prototype.ngOnInit = function () {
        var grid = this._elementRef.nativeElement;
        var cartesianChart = this.owner.nativeChart;
        cartesianChart.grid = grid;
    };
    CartesianChartGridDirective = __decorate([
        core_1.Directive({
            selector: "[cartesianChartGrid]",
        }),
        __param(0, core_1.Inject(RadCartesianChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], CartesianChartGridDirective);
    return CartesianChartGridDirective;
}());
exports.CartesianChartGridDirective = CartesianChartGridDirective;
var CartesianSeriesDirective = (function () {
    function CartesianSeriesDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    CartesianSeriesDirective.prototype.ngOnInit = function () {
        var series = this._elementRef.nativeElement;
        if (this.owner.nativeChart.series) {
            this.owner.nativeChart.series.push(series);
        }
        else {
            this.owner.nativeChart.series = new observable_array_1.ObservableArray([series]);
        }
    };
    CartesianSeriesDirective = __decorate([
        core_1.Directive({
            selector: "[cartesianSeries]",
        }),
        __param(0, core_1.Inject(RadCartesianChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], CartesianSeriesDirective);
    return CartesianSeriesDirective;
}());
exports.CartesianSeriesDirective = CartesianSeriesDirective;
var PieChartSeriesDirective = (function () {
    function PieChartSeriesDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    PieChartSeriesDirective.prototype.ngOnInit = function () {
        var series = this._elementRef.nativeElement;
        if (this.owner.nativeChart.series) {
            this.owner.nativeChart.series.push(series);
        }
        else {
            this.owner.nativeChart.series = new observable_array_1.ObservableArray([series]);
        }
    };
    PieChartSeriesDirective = __decorate([
        core_1.Directive({
            selector: "[pieSeries]",
        }),
        __param(0, core_1.Inject(RadPieChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], PieChartSeriesDirective);
    return PieChartSeriesDirective;
}());
exports.PieChartSeriesDirective = PieChartSeriesDirective;
var CartesianPaletteDirective = (function () {
    function CartesianPaletteDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    CartesianPaletteDirective.prototype.ngOnInit = function () {
        var palette = this._elementRef.nativeElement;
        if (this.owner.nativeChart.palettes) {
            this.owner.nativeChart.palettes.push(palette);
        }
        else {
            this.owner.nativeChart.palettes = new observable_array_1.ObservableArray([palette]);
        }
    };
    CartesianPaletteDirective = __decorate([
        core_1.Directive({
            selector: "[cartesianPalette]"
        }),
        __param(0, core_1.Inject(RadCartesianChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], CartesianPaletteDirective);
    return CartesianPaletteDirective;
}());
exports.CartesianPaletteDirective = CartesianPaletteDirective;
var CartesianHorizontalAxisDirective = (function () {
    function CartesianHorizontalAxisDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    CartesianHorizontalAxisDirective.prototype.ngOnInit = function () {
        var axis = this._elementRef.nativeElement;
        var cartesianChart = this.owner.nativeChart;
        cartesianChart.horizontalAxis = axis;
    };
    CartesianHorizontalAxisDirective = __decorate([
        core_1.Directive({
            selector: "[cartesianHorizontalAxis]",
        }),
        __param(0, core_1.Inject(RadCartesianChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], CartesianHorizontalAxisDirective);
    return CartesianHorizontalAxisDirective;
}());
exports.CartesianHorizontalAxisDirective = CartesianHorizontalAxisDirective;
var CartesianVerticalAxisDirective = (function () {
    function CartesianVerticalAxisDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    CartesianVerticalAxisDirective.prototype.ngOnInit = function () {
        var axis = this._elementRef.nativeElement;
        var cartesianChart = this.owner.nativeChart;
        cartesianChart.verticalAxis = axis;
    };
    CartesianVerticalAxisDirective = __decorate([
        core_1.Directive({
            selector: "[cartesianVerticalAxis]",
        }),
        __param(0, core_1.Inject(RadCartesianChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], CartesianVerticalAxisDirective);
    return CartesianVerticalAxisDirective;
}());
exports.CartesianVerticalAxisDirective = CartesianVerticalAxisDirective;
var PieLegendDirective = (function () {
    function PieLegendDirective(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    PieLegendDirective.prototype.ngOnInit = function () {
        var legend = this._elementRef.nativeElement;
        var cartesianChart = this.owner.nativeChart;
        cartesianChart.legend = legend;
    };
    PieLegendDirective = __decorate([
        core_1.Directive({
            selector: "[pieLegend]",
        }),
        __param(0, core_1.Inject(RadPieChartDirective)),
        __param(1, core_1.Inject(core_1.ElementRef))
    ], PieLegendDirective);
    return PieLegendDirective;
}());
exports.PieLegendDirective = PieLegendDirective;
exports.CHART_DIRECTIVES = [RadCartesianChartDirective, RadPieChartDirective, LineSeriesDirective, AreaSeriesDirective, SplineSeriesDirective, BarSeriesDirective, RangeBarSeriesDirective, BubbleSeriesDirective, ScatterBubbleSeriesDirective, ScatterSeriesDirective, PieSeriesDirective, PieChartSeriesDirective, CartesianSeriesDirective, PieSeriesDirective, CartesianHorizontalAxisDirective, CartesianVerticalAxisDirective, LinearAxisDirective, DateTimeCategoricalAxisDirective, CategoricalAxisDirective, RadCartesianChartGridDirective, CartesianChartGridDirective, PaletteDirective, CartesianPaletteDirective, CandlestickSeriesDirective, OhlcSeriesDirective, RadLegendViewDirective, DonutSeriesDirective, PieLegendDirective];
exports.CHART_PROVIDERS = [di_1.provide(core_1.PLATFORM_DIRECTIVES, { useValue: exports.CHART_DIRECTIVES, multi: true })];
elementRegistryModule.registerElement("RadCartesianChart", function () { return chartModule.RadCartesianChart; });
elementRegistryModule.registerElement("RadPieChart", function () { return chartModule.RadPieChart; });
elementRegistryModule.registerElement("RadLegendView", function () { return chartModule.RadLegendView; });
elementRegistryModule.registerElement("LineSeries", function () { return chartModule.LineSeries; });
elementRegistryModule.registerElement("PieSeries", function () { return chartModule.PieSeries; });
elementRegistryModule.registerElement("DonutSeries", function () { return chartModule.DonutSeries; });
elementRegistryModule.registerElement("AreaSeries", function () { return chartModule.AreaSeries; });
elementRegistryModule.registerElement("CategoricalAxis", function () { return chartModule.CategoricalAxis; });
elementRegistryModule.registerElement("LinearAxis", function () { return chartModule.LinearAxis; });
elementRegistryModule.registerElement("DateTimeCategoricalAxis", function () { return chartModule.DateTimeCategoricalAxis; });
elementRegistryModule.registerElement("SplineSeries", function () { return chartModule.SplineSeries; });
elementRegistryModule.registerElement("BarSeries", function () { return chartModule.BarSeries; });
elementRegistryModule.registerElement("RangeBarSeries", function () { return chartModule.RangeBarSeries; });
elementRegistryModule.registerElement("BubbleSeries", function () { return chartModule.BubbleSeries; });
elementRegistryModule.registerElement("ScatterBubbleSeries", function () { return chartModule.ScatterBubbleSeries; });
elementRegistryModule.registerElement("ScatterSeries", function () { return chartModule.ScatterSeries; });
elementRegistryModule.registerElement("OhlcSeries", function () { return chartModule.OhlcSeries; });
elementRegistryModule.registerElement("CandlestickSeries", function () { return chartModule.CandlestickSeries; });
elementRegistryModule.registerElement("RadCartesianChartGrid", function () { return chartModule.RadCartesianChartGrid; });
elementRegistryModule.registerElement("Palette", function () { return chartModule.Palette; });
